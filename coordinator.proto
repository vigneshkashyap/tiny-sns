syntax = "proto3";
package csce662;
import "google/protobuf/timestamp.proto";

service CoordService{
    rpc GetSlave (ID) returns (ServerInfo) {}
    rpc Heartbeat (ServerInfo) returns (Confirmation) {}
    rpc GetServer (ID) returns (ServerInfo) {}
    rpc GetAllFollowerServers (ID) returns (ServerList) {}
    rpc GetFollowerServer (ID) returns (ServerInfo) {}
}

//server info message definition
message ServerInfo{
    int32 serverID = 1;
    string hostname = 2;
    string port = 3;
    string type = 4;
    int32 clusterID = 5;
    bool isMaster = 6;
}

//confirmation message definition
message Confirmation{
    bool status = 1;
    bool reconnect = 2;
}

//id message definition
message ID{
    int32 id = 1;
}


//two repeated string lists of each entry in a users
//Timeline (TL) and Follower List (FL)
// TLFL definition
message TLFL{
    bool status = 1;
    repeated string TL = 2;
    repeated string FL = 3;
}


//list of all users known of by given follower synchronizer
// AllUsers definition
message AllUsers{
    repeated string users = 1;
}

message SynchronizerListReply {
  repeated string all_users = 1;
  repeated string followers = 2;
}


// ServerList definition
message ServerList{
    repeated int32 serverID = 1;
    repeated string hostname = 2;
    repeated string port = 3;
    repeated string type = 4;
}


//TODO:
// potentially add a wake up synchronization rpc to be made from
// coordinator when it detects a server reconnects after being off
// SynchService definition
service SynchService{
    rpc GetAllUsers(Confirmation) returns (AllUsers) {}
    rpc GetFollowersOfClient(ID) returns (AllUsers) {}
    rpc GetTLFL(ID) returns (TLFL) {}
    rpc ResynchServer(ServerInfo) returns (Confirmation) {}
    rpc SynchronizerList(ID) returns (SynchronizerListReply) {}
}